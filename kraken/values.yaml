# Default values for kraken.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

default:
  - &default_tag 3.0.0-beta
  - &default_pull_policy IfNotPresent
  - &default_admin_username "admin"
  - &default_admin_password "kraken"
  - &kraken_hostname "kraken-local"
    ## Storage data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  # storageClass: "-"
  - &default_storage_class null
  - &default_storage_class_name null

# nameOverride: kraken

admin:
  username: *default_admin_username
  password: *default_admin_password

ingress:
  enabled: true
  host: *kraken_hostname
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "12h"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"

backend:
  image:
    repository: octoperf/kraken-ee-kubernetes-all
    tag: *default_tag
    pullPolicy: IfNotPresent
  host: *kraken_hostname
  port: 8080
  service:
    port: 80
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
      nginx.ingress.kubernetes.io/proxy-body-size: "200m"
    path: /api(/|$)(.*)
# License file content
#  licenseFile: |
#    # kraken community 2.0.0 community License (id: 1574693532324)
#    8445f5f44c7f964b642a2a0368575854024639480c355888492744416ed0
#    ....
#    9d715369689d53150569
  persistence:
    accessMode: ReadWriteOnce
    size: 8Gi
    storageClass: *default_storage_class
    storageClassName: *default_storage_class_name
  k8s:
    # The runtime server will set the label "com.kraken/hostId=kraken-n" on every available worker node, marking them as usable to run tasks
    patchHosts: true

frontend:
  administration:
    image:
      repository: octoperf/kraken-administration-ui
      tag: *default_tag
      pullPolicy: IfNotPresent
    port: 80
    service:
      port: 80
    ingress:
      path: /administration
    config:
      config-prod.json: |-
        {
          "version": "administration-1",
          "applicationId": "administration",
          "backendApiUrl": "/api",
          "docUrl": "/doc",
          "readmeNode": {
            "path": "README.md",
            "type": "FILE",
            "depth": 0,
            "length": 0,
            "lastModified": 0
          },
          "keycloakConfiguration": {
            "url": "/auth",
            "realm": "kraken",
            "clientId": "kraken-web"
          },
          "expectedRoles": ["ADMIN"]
        }

  gatling:
    image:
      repository: octoperf/kraken-gatling-ui
      tag: *default_tag
      pullPolicy: IfNotPresent
    port: 80
    service:
      port: 80
    ingress:
      path: /gatling
    config:
      config-prod.json: |-
        {
          "version": "gatling-1",
          "applicationId": "gatling",
          "backendApiUrl": "/api",
          "readmeNode": {
            "path": "gatling/README.md",
            "type": "FILE",
            "depth": 1,
            "length": 0,
            "lastModified": 0
          },
          "docUrl": "/doc",
          "analysisRootNode": {
            "path": "gatling/results",
            "type": "DIRECTORY",
            "depth": 1,
            "length": 0,
            "lastModified": 0
          },
          "gatlingSimulationsRootNode": {
            "path": "gatling/user-files/simulations",
            "type": "DIRECTORY",
            "depth": 2,
            "length": 0,
            "lastModified": 0
          },
          "gatlingResourcesRootNode": {
            "path": "gatling/user-files/resources",
            "type": "DIRECTORY",
            "depth": 2,
            "length": 0,
            "lastModified": 0
          },
          "keycloakConfiguration": {
            "url": "/auth",
            "realm": "kraken",
            "clientId": "kraken-web"
          },
          "expectedRoles": ["USER"]
        }

documentation:
  image:
    repository: octoperf/kraken-documentation
    tag: *default_tag
    pullPolicy: IfNotPresent
  port: 80
  service:
    port: 80
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
    path: /doc(/|$)(.*)

grafana:
  enabled: true
  image:
    repository: grafana/grafana
    tag: 6.7.1
    pullPolicy: *default_pull_policy
  port: 3000
  service:
    port: 80
  admin:
    username: *default_admin_username
    password: *default_admin_password
  persistence:
    accessMode: ReadWriteOnce
    size: 8Gi
    storageClass: *default_storage_class
    storageClassName: *default_storage_class_name
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
    path: /grafana(/|$)(.*)
  plugins: grafana-piechart-panel, blackmirror1-singlestat-math-panel

influxdb:
  enabled: true
  image:
    repository: influxdb
    tag: 1.7.4
    pullPolicy: *default_pull_policy
  port: 8086
  service:
    port: 8086
  admin:
    username: *default_admin_username
    password: *default_admin_password
  persistence:
    accessMode: ReadWriteOnce
    size: 8Gi
    storageClass: *default_storage_class
    storageClassName: *default_storage_class_name
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
    path: /influxdb(/|$)(.*)

postgres:
  enabled: true
  image:
    repository: postgres
    tag: 12.2
    pullPolicy: *default_pull_policy
  port: 5432
  service:
    port: 5432
  admin:
    database: keycloak
    username: *default_admin_username
    password: *default_admin_password
  persistence:
    accessMode: ReadWriteOnce
    size: 8Gi
    storageClass: *default_storage_class
    storageClassName: *default_storage_class_name

keycloak:
  enabled: true
  host: *kraken_hostname
  image:
    repository: octoperf/kraken-keycloak
    tag: *default_tag
    pullPolicy: *default_pull_policy
  port: 9080 #Do not change without updating the command in keycloak-deployment.yaml
  service:
    port: 80
  admin:
    username: *default_admin_username
    password: *default_admin_password
  ingress:
    path: /auth
  config:
    recaptcha:
      enabled: false #TODO
      key: 6LcPAvkUAAAAAIBM3Ei6mS74W1BUyG4aNFUSpswC
      secret: 6LcPAvkUAAAAABONZ8ztd8K9RIDA26j21EUNMn8o
    mail:
      enabled: false
#      password: pwd
#      starttls: true/false
#      auth: true/false
#      port: 587
#      host: smtp.gamil.com
#      replyTo: test@mail.com
#      from: test@mail.com
#      fromDisplayName: Kraken
#      ssl: null
#      user: test@mail.com
    client:
      kraken-web:
        id: cc0809b5-6308-4490-9fee-c5d71f3b3f08
        secret: ed5974bb-e711-4b8b-9315-6ad315361f32
      kraken-api:
        id: 757cb0ac-b8c2-43bb-a623-de9d0bf733c8
        secret: c1ab32c0-0ba7-4289-b6c9-0ea1aa5ad1d4
      kraken-container:
        id: ebe67e46-89c6-4c92-94e1-3ff93bde8a7a
        secret: 6caa811c-5a41-4a53-aa5d-51c575330146