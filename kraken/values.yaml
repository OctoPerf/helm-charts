# Default values for kraken.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

default:
  - &default_tag 3.0.0-beta
  - &default_pull_policy IfNotPresent
  - &default_admin_username "admin"
  - &default_admin_password "kraken"
  ## Storage data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  - &default_storage_class null

# nameOverride: kraken

### RBAC CONFIGURATION ###

# https://kubernetes.io/docs/reference/access-authn-authz/rbac/
rbac:
  # Create RBAC roles and role bindings
  create: true

### INGRESS CONFIGURATION ###

host:
  name: ""
  ip: ""
# https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  # Create Ingress rules for enabled services
  enabled: true
  # Default Ingress annotations, here for ingress-nginx
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "12h"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"

### BACKEND CONFIGURATION ###

backend:
  # Backend image configuration
  image:
    repository: octoperf/kraken-ee-kubernetes-all
    tag: *default_tag
    pullPolicy: *default_pull_policy
  # Spring boot port
  port: 8080
  # Service configuration
  service:
    # Exposed port
    port: 80
  # Node selector https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
#  nodeSelector:
#    kubernetes.io/hostname: kraken-1
  # Backend Ingress configuration, redirects calls from /api/** to /**
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
      nginx.ingress.kubernetes.io/proxy-body-size: "200m"
    path: /api(/|$)(.*)
# HTTPS configuration https://cert-manager.io/docs/tutorials/acme/ingress/
#    tls:
#      - hosts:
#          - example.example.com
#        secretName: quickstart-example-tls
# License file content
#  licenseFile: |
#    # kraken community 2.0.0 community License (id: 1574693532324)
#    eyJraWQiOiJrcmFrZW4iLCJhb..zacBZd8ohVArx4g1bYFmou7AEDqO6z9PSgPGkdJIiyFgU67Zbg
# Persistence configuration (@see the top of this file for details regarding the storageClass and storageClassName values)
  persistence:
    accessMode: ReadWriteOnce
    size: 8Gi
    storageClass: *default_storage_class
    # Use an existing PVC instead of creating one (can be used when upgrading Kraken to a newer version)
    # existingClaim: backend-data
  k8s:
    # The backend server will set the label "com.octoperf/hostId=kraken-n" on every available worker node, marking them as usable to run tasks
    patchHosts: true
  ## Allows the specification of additional environment variables
  extraEnv:
#    - name: "KEY"
#      value: "value"

### FRONTEND CONFIGURATION ###

frontend:
  administration:
    # Administration frontend image configuration
    image:
      repository: octoperf/kraken-administration-ui
      tag: *default_tag
      pullPolicy: *default_pull_policy
    # NGinx port
    port: 80
    # Service configuration
    service:
      # Exposed port
      port: 80
    # Node selector https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
    #  nodeSelector:
    #    kubernetes.io/hostname: kraken-1
    # Administration frontend Ingress configuration, redirects calls from /administration/** to /**
    ingress:
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /$2
      path: /administration(/|$)(.*)
# HTTPS configuration https://cert-manager.io/docs/tutorials/acme/ingress/
#      tls:
#        - hosts:
#            - example.example.com
#          secretName: quickstart-example-tls
    # Administration frontend Angular configuration
    config:
      config-prod.json: |-
        {
          "version": "administration-3",
          "applicationId": "administration",
          "backendApiUrl": "/api",
          "docUrl": "/doc",
          "readmeNode": {
            "path": "README.md",
            "type": "FILE",
            "depth": 0,
            "length": 0,
            "lastModified": 0
          },
          "keycloakConfiguration": {
            "url": "/auth",
            "realm": "kraken",
            "clientId": "kraken-web"
          },
          "expectedRoles": ["ADMIN"]
        }

  gatling:
    # Gatling frontend image configuration
    image:
      repository: octoperf/kraken-gatling-ui
      tag: *default_tag
      pullPolicy: *default_pull_policy
    # NGinx port
    port: 80
    # Service configuration
    service:
      # Exposed port
      port: 80
    # Node selector https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
    #  nodeSelector:
    #    kubernetes.io/hostname: kraken-1
    # Gatling frontend Ingress configuration, redirects calls from /gatling/** to /**
    ingress:
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /$2
      path: /gatling(/|$)(.*)
# HTTPS configuration https://cert-manager.io/docs/tutorials/acme/ingress/
#      tls:
#        - hosts:
#            - example.example.com
#          secretName: quickstart-example-tls
    # Gatling frontend Angular configuration
    config:
      config-prod.json: |-
        {
          "version": "gatling-3",
          "applicationId": "gatling",
          "backendApiUrl": "/api",
          "readmeNode": {
            "path": "gatling/README.md",
            "type": "FILE",
            "depth": 1,
            "length": 0,
            "lastModified": 0
          },
          "docUrl": "/doc",
          "analysisRootNode": {
            "path": "gatling/results",
            "type": "DIRECTORY",
            "depth": 1,
            "length": 0,
            "lastModified": 0
          },
          "gatlingSimulationsRootNode": {
            "path": "gatling/user-files/simulations",
            "type": "DIRECTORY",
            "depth": 2,
            "length": 0,
            "lastModified": 0
          },
          "gatlingResourcesRootNode": {
            "path": "gatling/user-files/resources",
            "type": "DIRECTORY",
            "depth": 2,
            "length": 0,
            "lastModified": 0
          },
          "keycloakConfiguration": {
            "url": "/auth",
            "realm": "kraken",
            "clientId": "kraken-web"
          },
          "expectedRoles": ["USER"]
        }

### DOCUMENTATION CONFIGURATION ###

documentation:
  # Documentation image configuration
  image:
    repository: octoperf/kraken-documentation
    tag: *default_tag
    pullPolicy: *default_pull_policy
  # NGinx port
  port: 80
  # Service configuration
  service:
    # Exposed port
    port: 80
  # Node selector https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  #  nodeSelector:
  #    kubernetes.io/hostname: kraken-1
  # Documentation Ingress configuration, redirects calls from /doc/** to /**
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
    path: /doc(/|$)(.*)
# HTTPS configuration https://cert-manager.io/docs/tutorials/acme/ingress/
#    tls:
#      - hosts:
#          - example.example.com
#        secretName: quickstart-example-tls

### GRAFANA CONFIGURATION ###

# Grafana display load tests results
grafana:
  # Enables the Grafana stack (Pod, Service, Ingress, etc.) You can disable it if you want to use an existing Grafana server.
  enabled: true
  # Grafana image configuration
  image:
    repository: grafana/grafana
    tag: 6.7.1
    pullPolicy: *default_pull_policy
  # Grafana server port
  port: 3000
  # Service configuration
  service:
    # Exposed port
    port: 80
  # Node selector https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  #  nodeSelector:
  #    kubernetes.io/hostname: kraken-1
  # Default Administrator user login and password (also used by the backend to create/update/delete users, organizations and dashboards)
  admin:
    username: *default_admin_username
    password: *default_admin_password
  # Persistence configuration (@see the top of this file for details regarding the storageClass and storageClassName values)
  persistence:
    accessMode: ReadWriteOnce
    size: 8Gi
    storageClass: *default_storage_class
    # Use an existing PVC instead of creating one (can be used when upgrading Kraken to a newer version)
    # existingClaim: grafana-data
  # Ingress configuration, redirects /grafana/** to /**
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
    path: /grafana(/|$)(.*)
# HTTPS configuration https://cert-manager.io/docs/tutorials/acme/ingress/
#    tls:
#      - hosts:
#          - example.example.com
#        secretName: quickstart-example-tls
  # Plugins configuration, these plugins are used by the default Gatling dashboard
  plugins: grafana-piechart-panel, blackmirror1-singlestat-math-panel
  ## Allows the specification of additional environment variables
  extraEnv:
#    - name: "KEY"
#      value: "value"

### INFLUXDB CONFIGURATION ###

# Influxdb stores load tests performance metrics
influxdb:
  # Enables the Grafana stack (Pod, Service, Ingress, etc.) You can disable it if you want to use an existing Influxdb server.
  enabled: true
  image:
    repository: influxdb
    tag: 1.7.4
    pullPolicy: *default_pull_policy
  # Influxdb server port
  port: 8086
  # Service configuration
  service:
    # Exposed port
    port: 8086
  # Node selector https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  #  nodeSelector:
  #    kubernetes.io/hostname: kraken-1
  # Influxdb administration credentials (also used by the backend to create/delete databases and users)
  admin:
    username: *default_admin_username
    password: *default_admin_password
  # Persistence configuration (@see the top of this file for details regarding the storageClass and storageClassName values)
  persistence:
    accessMode: ReadWriteOnce
    size: 8Gi
    storageClass: *default_storage_class
    # Use an existing PVC instead of creating one (can be used when upgrading Kraken to a newer version)
    # existingClaim: influxdb-data
  # Ingress configuration, redirects /influxdb/** to /**
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
    path: /influxdb(/|$)(.*)
# HTTPS configuration https://cert-manager.io/docs/tutorials/acme/ingress/
#    tls:
#      - hosts:
#          - example.example.com
#        secretName: quickstart-example-tls
  # Allows the specification of additional environment variables
  extraEnv:
#    - name: "KEY"
#      value: "value"

### POSTGRES CONFIGURATION ###

# The postgres database is used by Grafana and Keycloak to store their data
postgres:
  # Enables the Postgres stack (Pod, Service etc.) You can disable it if you want to use an existing Postgres server.
  enabled: true
  # Postgres Image configuration
  image:
    repository: postgres
    tag: 12.2
    pullPolicy: *default_pull_policy
  # Postgres server port
  port: 5432
  # Service configuration
  service:
    # Exposed port
    port: 5432
  # Node selector https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  #  nodeSelector:
  #    kubernetes.io/hostname: kraken-1
  # Postgres administration configuration
  admin:
    # Keycloak database name
    databaseKeycloak: keycloak
    # Grafana database name
    databaseGrafana: grafana
    # Credentials to access both databases
    username: *default_admin_username
    password: *default_admin_password
  # Persistence configuration (@see the top of this file for details regarding the storageClass and storageClassName values)
  persistence:
    accessMode: ReadWriteOnce
    size: 8Gi
    storageClass: *default_storage_class
    # Use an existing PVC instead of creating one (can be used when upgrading Kraken to a newer version)
    # existingClaim: postgres-data
  # Allows the specification of additional environment variables
  extraEnv:
#    - name: "KEY"
#      value: "value"

### KEYCLOAK CONFIGURATION ###

# Keycloak is used to manage users connecting to Kraken
keycloak:
  # Enables the Postgres stack (Pod, Service etc.) You can disable it if you want to use an existing Keycloak server.
  enabled: true
  # Keycloak image configuration
  image:
    repository: octoperf/kraken-keycloak
    tag: *default_tag
    pullPolicy: *default_pull_policy
  # Keycloak port /!\ Do not change without updating the command in keycloak-deployment.yaml /!\
  port: 9080
  # Service configuration
  service:
    # Exposed port
    port: 80
  # Node selector https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  #  nodeSelector:
  #    kubernetes.io/hostname: kraken-1
  # Keycloak default administrator credentials
  admin:
    username: *default_admin_username
    password: *default_admin_password
  # Keycloak Ingress configuration: matches all requests starting with /auth (no need to redirect to /** as the Keycloak server already answers at the /auth path out of the box)
  ingress:
    path: /auth
# HTTPS configuration https://cert-manager.io/docs/tutorials/acme/ingress/
#    tls:
#      - hosts:
#          - example.example.com
#        secretName: quickstart-example-tls
  # Allows the specification of additional environment variables
  extraEnv:
  #    - name: "KEY"
  #      value: "value"
  # Keycloak Kraken realm configuration
  config:
    # Google recaptcha configuration (used to prevent bots from registering accounts). You may replace the key/secret pair with your own (https://www.google.com/recaptcha)
    recaptcha:
      enabled: false
      key: 6LcPAvkUAAAAAIBM3Ei6mS74W1BUyG4aNFUSpswC
      secret: 6LcPAvkUAAAAABONZ8ztd8K9RIDA26j21EUNMn8o
    # SMTP configuration
    mail:
      enabled: false
    #      password: pwd
    #      starttls: true/false
    #      auth: true/false
    #      port: 587
    #      host: smtp.gamil.com
    #      replyTo: test@mail.com
    #      from: test@mail.com
    #      fromDisplayName: Kraken
    #      ssl: null
    #      user: test@mail.com

    # OAuth clients configurations. Also used by the backend to connect to Keycloak in order to manage users.
    client:
      web:
        secret: ed5974bb-e711-4b8b-9315-6ad315361f32
      api:
        secret: c1ab32c0-0ba7-4289-b6c9-0ea1aa5ad1d4
      container:
        secret: 6caa811c-5a41-4a53-aa5d-51c575330146