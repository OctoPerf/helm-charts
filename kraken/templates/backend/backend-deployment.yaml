apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "name" . }}-backend
  labels:
    app: {{ template "name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "name" . }}-backend
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: {{ template "name" . }}-backend
    spec:
{{- if .Values.rbac.create }}
      serviceAccountName: {{ template "name" . }}-backend
{{- end }}
{{- with .Values.backend.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
      containers:
        - image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          name: {{ template "name" . }}-backend
          ports:
            - containerPort: {{ .Values.backend.port }}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "kubernetes"
            - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI
              value: "{{ .Values.host.scheme }}://{{ .Values.host.name }}/auth/realms/kraken"
            - name: SERVER_PORT
              value: "{{ .Values.backend.port }}"
            - name: KRAKEN_BACKEND_HOSTNAME
              value: "{{ .Values.host.name }}"
            - name: KRAKEN_VERSION
              value: "{{ .Values.backend.image.tag }}"
            - name: KRAKEN_BACKEND_URL
              value: "{{ .Values.host.scheme }}://{{ template "name" . }}-backend:{{ .Values.backend.service.port }}"
            - name: KRAKEN_SECURITY_URL
              value: "{{ .Values.host.scheme }}://{{ .Values.host.name }}/auth"
            - name: KRAKEN_SECURITY_CONTAINER_SECRET
              value: "{{ .Values.keycloak.config.client.container.secret }}"
            - name: KRAKEN_SECURITY_API_SECRET
              value: "{{ .Values.keycloak.config.client.api.secret }}"
            - name: KRAKEN_GRAFANA_URL
              value: "{{ .Values.host.scheme }}://{{ template "name" . }}-grafana:{{ .Values.grafana.service.port }}"
            - name: KRAKEN_GRAFANA_PUBLISHED_URL
              value: "{{ .Values.host.scheme }}://{{ .Values.host.name }}/grafana"
            - name: KRAKEN_GRAFANA_USER
              value: "{{ .Values.grafana.admin.username }}"
            - name: KRAKEN_GRAFANA_PASSWORD
              value: "{{ .Values.grafana.admin.password }}"
            - name: KRAKEN_INFLUXDB_URL
              value: "{{ .Values.host.scheme }}://{{ template "name" . }}-influxdb:{{ .Values.influxdb.service.port }}"
            - name: KRAKEN_INFLUXDB_PUBLISHED_URL
              value: "{{ .Values.host.scheme }}://{{ template "name" . }}-influxdb:{{ .Values.influxdb.service.port }}"
            - name: KRAKEN_INFLUXDB_USER
              value: "{{ .Values.influxdb.admin.username }}"
            - name: KRAKEN_INFLUXDB_PASSWORD
              value: "{{ .Values.influxdb.admin.password }}"
            - name: KRAKEN_K8S_PATCHHOSTS
              value: "{{ .Values.backend.k8s.patchHosts }}"
            - name: KRAKEN_K8S_NAMESPACE
              value: "{{ .Release.Namespace }}"
            - name: KRAKEN_DATA
              value: "/home/kraken/data"
            - name: KRAKEN_LICENSE_ENTERPRISE
              value: "../license.jwt"
{{- range .Values.backend.extraEnv }}
            - name: {{ .name }}
              value: {{ .value | quote }}
{{- end }}
          volumeMounts:
            - mountPath: "/home/kraken/data"
              name: backend-data
{{- if .Values.backend.licenseFile }}
            - name: license-jwt
              mountPath: "/home/kraken/license.jwt"
              subPath: "license.jwt"
{{- end }}
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 5
            httpGet:
              path: /actuator/health/readiness
              port: {{ .Values.backend.port }}
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            httpGet:
              path: /actuator/health/liveness
              port: {{ .Values.backend.port }}
      volumes:
        - name: backend-data
          persistentVolumeClaim:
            claimName: {{ .Values.backend.persistence.existingClaim | default "backend-data" | quote }}
{{- if .Values.backend.licenseFile }}
        - name: license-jwt
          configMap:
            name: "{{ template "name" . }}-backend-license"
{{- end }}
{{- if .Values.host.ip }}
      hostAliases:
        - hostnames:
            - {{ .Values.host.name }}
          ip: {{ .Values.host.ip }}
{{- end }}


